model:
Title 面试问题;
!设置变量;
SETS:Person/1..4/; !设置面试者;
Stage/1..3/; !设置面试阶段;
PXS(Person,Stage):T,X; !设置矩阵PXS，行为Person，列为Stage;
PXP(Person,Person)|&1#LT#&2:Y; !设置矩阵PXP，行与列都为Person，其中&1与&2分别表示第一个和第二个下角标
!#LT#表示小于;
ENDSETS

!设置数据;
DATA: !设置每个面试者参加不同面试阶段时所需要的时间;
T=10,15,20,15,12,18,20,16,10,8,18,15;
ENDDATA

!设置目标函数与约束条件;
[obj]min=MAXT; !利用[obj]表示目标函数，行号标识;
 MAXT=@max(PXS(i,j)|j#EQ#@size(stage):x(i,j)+t(i,j)); !EQ表示逻辑运算符：相等;
!表示求出每一个阶段（j#EQ#@size(stage)）面试者开始面试时间+面试时间（x(i,j)+t(i,j)）的最大值;
!@size()：用于确定集合中元素的个数

!约束条件1：参加完j阶段的面试才可以进入j+1阶段的面试;
@for(PXS(i,j)|j#LT#@size(stage): !LT表示逻辑运算符：小于;
[ORDER]x(i,j)+t(i,j)<x(i,j+1)); !利用[order]表示约束条件，行号标识;

!约束条件2：同一阶段只能面试一名面试者;
@for(Stage(j):
  @for(PXP(i,k):[SORT1]x(i,j)+t(i,j)<MAXT*Y(i,k));
  @for(PXP(i,k):[SORT2]x(k,j)+t(k,j)-x(i,j)<MAXT*(1-Y(i,k))));
@for(PXP:@bin(y)); !bin表示0-1变量;
end
